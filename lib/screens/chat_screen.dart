import 'package:flutter/material.dart';
import '../theme/app_theme.dart';
import '../theme/text_style.dart';

class ChatMessage {
  final String message;
  final bool isUser;
  final String? imageUrl;
  final DateTime timestamp;
  final bool isTyping;
  final ChatMessageType type;

  ChatMessage({
    required this.message,
    required this.isUser,
    this.imageUrl,
    DateTime? timestamp,
    this.isTyping = false,
    this.type = ChatMessageType.general,
  }) : timestamp = timestamp ?? DateTime.now();
}

enum ChatMessageType {
  general,
  mealPlan,
  healthAdvice,
  exerciseGuide,
  goalProgress
}

class ChatScreen extends StatefulWidget {
  const ChatScreen({super.key});

  @override
  State<ChatScreen> createState() => _ChatScreenState();
}

class _ChatScreenState extends State<ChatScreen> with TickerProviderStateMixin {
  final TextEditingController _messageController = TextEditingController();
  final ScrollController _scrollController = ScrollController();
  final FocusNode _textFieldFocusNode = FocusNode();
  final List<ChatMessage> _messages = [];
  bool _isTyping = false;
  bool _isKeyboardVisible = false;
  bool _isTextFieldFocused = false;
  bool _hasUserStartedTyping = false; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏¢‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
  late AnimationController _typingAnimationController;
  late AnimationController _headerAnimationController;
  late Animation<double> _headerAnimation;

  @override
  void initState() {
    super.initState();
    _typingAnimationController = AnimationController(
      duration: const Duration(milliseconds: 1500),
      vsync: this,
    )..repeat();

    _headerAnimationController = AnimationController(
      duration: const Duration(milliseconds: 300),
      vsync: this,
    );

    _headerAnimation = Tween<double>(
      begin: 0.0,
      end: 1.0,
    ).animate(CurvedAnimation(
      parent: _headerAnimationController,
      curve: Curves.easeInOut,
    ));

    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á header
    _headerAnimationController.forward();

    // Listen to focus changes
    _textFieldFocusNode.addListener(() {
      setState(() {
        _isTextFieldFocused = _textFieldFocusNode.hasFocus;
      });

      // ‡πÄ‡∏°‡∏∑‡πà‡∏≠ TextField ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö focus ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å ‡πÉ‡∏´‡πâ‡∏ã‡πà‡∏≠‡∏ô header ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏µ‡∏Å
      if (_isTextFieldFocused && !_hasUserStartedTyping) {
        _hasUserStartedTyping = true; // ‡∏ó‡∏≥‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏•‡πâ‡∏ß
        _headerAnimationController.reverse(); // ‡∏ã‡πà‡∏≠‡∏ô header
      }

      print('TextField focus changed: $_isTextFieldFocused, hasStartedTyping: $_hasUserStartedTyping');
    });

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
    _messages.add(
      ChatMessage(
        message: "üëã ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏ú‡∏°‡∏Ñ‡∏∑‡∏≠ AI ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏î‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£\n\n‡∏ú‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏ä‡πà‡∏ô:\n‚Ä¢ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û\n‚Ä¢ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏ÑÔøΩÔøΩÔøΩ‡∏≠‡∏£‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£\n‚Ä¢ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£\n\n‡∏•‡∏≠‡∏á‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö! üòä",
        isUser: false,
      ),
    );
  }

  @override
  void dispose() {
    _messageController.dispose();
    _scrollController.dispose();
    _typingAnimationController.dispose();
    _headerAnimationController.dispose(); // Dispose Animation Controller
    _textFieldFocusNode.dispose(); // Dispose FocusNode
    super.dispose();
  }

  void _scrollToBottom() {
    Future.delayed(const Duration(milliseconds: 100), () {
      if (_scrollController.hasClients) {
        _scrollController.animateTo(
          0,
          duration: const Duration(milliseconds: 300),
          curve: Curves.easeOut,
        );
      }
    });
  }

  void _handleSendMessage(String message) {
    if (message.trim().isEmpty) return;

    setState(() {
      _messages.insert(0, ChatMessage(message: message, isUser: true));
      _isTyping = true;
    });

    _messageController.clear();
    _scrollToBottom();

    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£ typing ‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
    Future.delayed(const Duration(seconds: 2), () {
      setState(() {
        _isTyping = false;
        String response = _getAIResponse(message);
        _messages.insert(0, ChatMessage(message: response, isUser: false));
      });
      _scrollToBottom();
    });
  }

  void _handleImageUpload() {
    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ
    setState(() {
      _messages.insert(0, ChatMessage(
        message: "üì∑ ‡∏£‡∏π‡∏õ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡πà‡∏á‡∏°‡∏≤",
        isUser: true,
        imageUrl: "https://picsum.photos/300/200",
      ));
      _isTyping = true;
    });

    _scrollToBottom();

    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏π‡∏õ
    Future.delayed(const Duration(seconds: 3), () {
      setState(() {
        _isTyping = false;
        _messages.insert(0, ChatMessage(
          message: "üîç ‡∏à‡∏≤‡∏Å‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡πà‡∏á‡∏°‡∏≤ ‡∏ú‡∏°‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏´‡πá‡∏ô‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô:\n\nüç≥ **‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏∏‡πâ‡∏á**\nüìä **‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 350-400 ‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà**\n\n**‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å:**\n‚Ä¢ ‡∏Ç‡πâ‡∏≤‡∏ß‡∏™‡∏ß‡∏¢ - 250 kcal\n‚Ä¢ ‡∏Å‡∏∏‡πâ‡∏á - 80 kcal\n‚Ä¢ ‡πÑ‡∏Ç‡πà - 70 kcal\n‚Ä¢ ‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô - 50 kcal\n\nüí° **‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:** ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡∏î‡∏µ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏±‡∏Å‡πÉ‡∏´‡πâ‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö!",
          isUser: false,
        ));
      });
      _scrollToBottom();
    });
  }

  void _handleAIResponse(String message, {ChatMessageType type = ChatMessageType.general}) {
    setState(() {
      _messages.add(ChatMessage(
        message: message,
        isUser: false,
        type: type,
        isTyping: false,
      ));
    });
    _scrollToBottom();
  }

  void _sendMessage() {
    if (_messageController.text.trim().isEmpty) return;

    final userMessage = _messageController.text;
    setState(() {
      _messages.add(ChatMessage(
        message: userMessage,
        isUser: true,
      ));
      _messageController.clear();

      // Add AI typing indicator
      _messages.add(ChatMessage(
        message: "AI is typing...",
        isUser: false,
        isTyping: true,
      ));
    });
    _scrollToBottom();

    // Simulate AI response based on message content
    Future.delayed(const Duration(seconds: 1), () {
      setState(() {
        _messages.removeLast(); // Remove typing indicator
      });

      if (userMessage.toLowerCase().contains("‡∏≠‡∏≤‡∏´‡∏≤‡∏£") ||
          userMessage.toLowerCase().contains("‡πÅ‡∏ú‡∏ô")) {
        _handleAIResponse(
          "‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏ú‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏≤‡∏°‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:\n\n"
          "üç≥ ‡πÄ‡∏ä‡πâ‡∏≤: ‡πÇ‡∏à‡πä‡∏Å‡πÑ‡∏Ç‡πà‡∏Ç‡∏≤‡∏ß (200 kcal)\n"
          "ü•ó ‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô: ‡∏™‡∏•‡∏±‡∏î‡∏≠‡∏Å‡πÑ‡∏Å‡πà (350 kcal)\n"
          "üçñ ‡πÄ‡∏¢‡πá‡∏ô: ‡∏õ‡∏•‡∏≤‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏±‡∏Å‡∏ï‡πâ‡∏° (400 kcal)",
          type: ChatMessageType.mealPlan
        );
      } else if (userMessage.toLowerCase().contains("‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢")) {
        _handleAIResponse(
          "‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ:\n\n"
          "üèÉ‚Äç‚ôÇÔ∏è ‡∏ß‡∏¥‡πà‡∏á‡πÄ‡∏ö‡∏≤‡πÜ 20 ‡∏ô‡∏≤‡∏ó‡∏µ\n"
          "üí™ ‡∏Å‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£ 15 ‡∏ô‡∏≤‡∏ó‡∏µ\n"
          "üßò‚Äç‚ôÄÔ∏è ‡∏¢‡∏∑‡∏î‡πÄ‡∏´‡∏¢‡∏µ‡∏¢‡∏î 10 ‡∏ô‡∏≤‡∏ó‡∏µ",
          type: ChatMessageType.exerciseGuide
        );
      } else {
        _handleAIResponse(
          "‡∏â‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô AI ‡πÇ‡∏Ñ‡πâ‡∏ä‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:\n"
          "‚Ä¢ ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£\n"
          "‚Ä¢ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢\n"
          "‚Ä¢ ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û\n"
          "‚Ä¢ ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤",
          type: ChatMessageType.general
        );
      }
    });
  }

  String _getAIResponse(String message) {
    message = message.toLowerCase();

    if (message.contains('‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà') || message.contains('calorie')) {
      return 'üìä **‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà**\n\n‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ß‡∏±‡∏î‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£\n\n**‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô:**\n‚Ä¢ ‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢: 2,000-2,500 kcal\n‚Ä¢ ‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á: 1,800-2,000 kcal\n\nüí° **Tips:** ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å ‡πÅ‡∏•‡∏∞‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö!';
    } else if (message.contains('‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢') || message.contains('exercise') || message.contains('‡∏ß‡∏¥‡πà‡∏á') || message.contains('‡πÄ‡∏î‡∏¥‡∏ô')) {
      return 'üèÉ‚Äç‚ôÇÔ∏è **‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢**\n\n**‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏ú‡∏≤‡∏ú‡∏•‡∏≤‡∏ç (‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å 65 ‡∏Å‡∏Å.):**\n‚Ä¢ ‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏£‡πá‡∏ß (30 ‡∏ô‡∏≤‡∏ó‡∏µ): 150 kcal\n‚Ä¢ ‡∏ß‡∏¥‡πà‡∏á‡πÄ‡∏ö‡∏≤‡πÜ (30 ‡∏ô‡∏≤‡∏ó‡∏µ): 300 kcal\n‚Ä¢ ‡∏õ‡∏±‡πà‡∏ô‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô (30 ‡∏ô‡∏≤‡∏ó‡∏µ): 250 kcal\n‚Ä¢ ‡∏ß‡πà‡∏≤‡∏¢‡∏ô‡πâ‡∏≥ (30 ‡∏ô‡∏≤‡∏ó‡∏µ): 350 kcal\n\nüí™ **‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:** ‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 150 ‡∏ô‡∏≤‡∏ó‡∏µ/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå';
    } else if (message.contains('‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì') || message.contains('calculate')) {
      return 'üßÆ **‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì**\n\n**‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ:**\n‚Ä¢ ‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏ú‡∏≤‡∏ú‡∏•‡∏≤‡∏ç‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢\n‚Ä¢ BMR (‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ú‡∏≤‡∏ú‡∏•‡∏≤‡∏ç‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô)\n‚Ä¢ BMI (‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏°‡∏ß‡∏•‡∏Å‡∏≤‡∏¢)\n‚Ä¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡πâ‡∏≥‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô\n\nüì± **‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ:** ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì BMI" ‡∏´‡∏£‡∏∑‡∏≠ "‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πà‡∏á 30 ‡∏ô‡∏≤‡∏ó‡∏µ"';
    } else if (message.contains('bmi')) {
      return 'üìè **‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì BMI**\n\n**‡∏™‡∏π‡∏ï‡∏£:** ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å (‡∏Å‡∏Å.) √∑ ‡∏™‡πà‡∏ß‡∏ôÔøΩÔøΩÔøΩ‡∏π‡∏á¬≤ (‡∏°.)\n\n**‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô:**\n‚Ä¢ ‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ 18.5: ‡∏ú‡∏≠‡∏°‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ\n‚Ä¢ 18.5-22.9: ‡∏õ‡∏Å‡∏ï‡∏¥\n‚Ä¢ 23-24.9: ‡∏ó‡πâ‡∏ß‡∏°\n‚Ä¢ 25-29.9: ‡∏≠‡πâ‡∏ß‡∏ô\n‚Ä¢ 30 ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ: ‡∏≠‡πâ‡∏ß‡∏ô‡∏°‡∏≤‡∏Å\n\nüí° **‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:** ‡∏™‡∏π‡∏á 170 ‡∏ã‡∏°. ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å 65 ‡∏Å‡∏Å.\nBMI = 65 √∑ (1.7)¬≤ = 22.5 (‡∏õ‡∏Å‡∏ï‡∏¥)';
    } else if (message.contains('‡∏ô‡πâ‡∏≥') || message.contains('water')) {
      return 'üíß **‡∏Å‡∏≤‡∏£‡∏î‡∏∑‡πà‡∏°‡∏ô‡πâ‡∏≥**\n\n**‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡πâ‡∏≥‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô:**\n‚Ä¢ ‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢: 2.5-3 ‡∏•‡∏¥‡∏ï‡∏£\n‚Ä¢ ‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á: 2-2.5 ‡∏•‡∏¥‡∏ï‡∏£\n\n**‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠:**\n‚Ä¢ ‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢: +500-750 ‡∏°‡∏•./‡∏ä‡∏°.\n‚Ä¢ ‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏£‡πâ‡∏≠‡∏ô: +300-500 ‡∏°‡∏•.\n‚Ä¢ ‡∏õ‡πà‡∏ß‡∏¢‡πÑ‡∏Ç‡πâ: +500-1000 ‡∏°‡∏•.\n\nüïê **Tips:** ‡∏î‡∏∑‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏ó‡∏∏‡∏Å 2 ‡∏ä‡∏°. ‡∏≠‡∏¢‡πà‡∏≤‡∏£‡∏≠‡∏à‡∏ô‡∏´‡∏¥‡∏ß!';
    } else if (message.contains('‡∏≠‡∏≤‡∏´‡∏≤‡∏£') || message.contains('‡∏Å‡∏¥‡∏ô') || message.contains('‡πÄ‡∏°‡∏ô‡∏π')) {
      return 'üçΩÔ∏è **‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£**\n\n**‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏ô‡∏î‡∏µ:**\n‚Ä¢ ‡∏Å‡∏¥‡∏ô‡∏Ñ‡∏£‡∏ö 5 ‡∏´‡∏°‡∏π‡πà\n‚Ä¢ ‡∏ú‡∏±‡∏Å‡∏ú‡∏•‡πÑ‡∏°‡πâ 5-9 ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô\n‚Ä¢ ‡∏î‡∏∑‡πà‡∏°‡∏ô‡πâ‡∏≥ 8-10 ‡πÅ‡∏Å‡πâ‡∏ß\n‚Ä¢ ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏≠‡∏î ‡∏´‡∏ß‡∏≤‡∏ô ‡∏°‡∏±‡∏ô\n\nü•ó ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?';
    } else if (message.contains('‡∏•‡∏î‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å') || message.contains('diet')) {
      return '‚öñÔ∏è **‡∏Å‡∏≤‡∏£‡∏•‡∏î‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å**\n\n**‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£:**\n‚Ä¢ ‡∏™‡∏£‡πâ‡∏≤‡∏á Calorie Deficit\n‚Ä¢ ‡∏Å‡∏¥‡∏ô 500 kcal ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ\n‚Ä¢ ‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢ 150 ‡∏ô‡∏≤‡∏ó‡∏µ/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå\n\n**‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:**\nü•ó ‡∏™‡∏•‡∏±‡∏î, ‡πÑ‡∏Å‡πà‡∏ï‡πâ‡∏°, ‡∏õ‡∏•‡∏≤‡∏¢‡πà‡∏≤‡∏á\nüö´ ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á: ‡∏ó‡∏≠‡∏î, ‡∏´‡∏ß‡∏≤‡∏ô, ‡πÅ‡∏õ‡πâ‡∏á\n\nüí™ ‡∏≠‡∏î‡∏ó‡∏ô + ‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏∏‡∏ç‡πÅ‡∏à‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ñ‡∏£‡∏±‡∏ö!';
    } else if (message.contains('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å') || message.contains('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏•‡πâ‡∏≤‡∏°')) {
      return 'üí™ **‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å/‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠**\n\n**‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£:**\n‚Ä¢ ‡∏Å‡∏¥‡∏ô Calorie Surplus 300-500 kcal\n‚Ä¢ ‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô 1.6-2.2 ‡∏Å‡∏£‡∏±‡∏°/‡∏Å‡∏Å.‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å\n‚Ä¢ ‡πÄ‡∏ß‡∏ó‡πÄ‡∏ó‡∏£‡∏ô‡∏ô‡∏¥‡πà‡∏á 3-4 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå\n\n**‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:**\nüçñ ‡πÑ‡∏Å‡πà ‡∏õ‡∏•‡∏≤ ‡πÑ‡∏Ç‡πà ‡∏ñ‡∏±‡πà‡∏ß\nüçö ‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏•‡πâ‡∏≠‡∏á ‡∏Ç‡πâ‡∏≤‡∏ß‡πÇ‡∏≠‡πä‡∏ï\nü•ú ‡∏ñ‡∏±‡πà‡∏ß‡∏≠‡∏±‡∏•‡∏°‡∏≠‡∏ô‡∏î‡πå ‡∏≠‡πÇ‡∏ß‡∏Ñ‡∏≤‡πÇ‡∏î\n\nüìà **‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢:** ‡πÄ‡∏û‡∏¥‡πà‡∏° 0.5-1 ‡∏Å‡∏Å./‡πÄ‡∏î‡∏∑‡∏≠‡∏ô';
    } else if (message.contains('‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ') || message.contains('hello') || message.contains('hi')) {
      return 'üëã ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠\n\n**‡∏ú‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏î‡πâ:**\nüì∑ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏π‡∏õ‡∏≠‡∏≤‡∏´‡∏≤‡∏£\nüßÆ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡πÅ‡∏•‡∏∞ BMI\nüèÉ‚Äç‚ôÇÔ∏è ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢\nüçΩÔ∏è ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£\nüí™ ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û\n\n‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö? üòä';
    } else if (message.contains('‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì') || message.contains('thank')) {
      return 'üôè ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö\n\n‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄÔøΩÔøΩ‡∏¥‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö! üòä';
    }

    return 'ü§î ‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ú‡∏°‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°\n\n**‡∏•‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏î‡∏π‡∏Ñ‡∏£‡∏±‡∏ö:**\nüì∑ "‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏π‡∏õ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏´‡∏ô‡πà‡∏≠‡∏¢"\nüßÆ "‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì BMI"\nüèÉ‚Äç‚ôÇÔ∏è "‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πà‡∏á 30 ‡∏ô‡∏≤‡∏ó‡∏µ"\nüçΩÔ∏è "‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏°‡∏ô‡∏π‡∏•‡∏î‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å"\n\n‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏°‡∏≤‡πÉ‡∏´‡πâ‡∏ú‡∏°‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö! üòä';
  }

  @override
  Widget build(BuildContext context) {
    // Check if keyboard is visible
    final keyboardHeight = MediaQuery.of(context).viewInsets.bottom;
    final isKeyboardVisible = keyboardHeight > 0;

    // Update keyboard visibility state and handle unfocus when keyboard closes
    if (_isKeyboardVisible != isKeyboardVisible) {
      WidgetsBinding.instance.addPostFrameCallback((_) {
        setState(() {
          _isKeyboardVisible = isKeyboardVisible;
        });

        // ‡∏ñ‡πâ‡∏≤ keyboard ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà TextField ‡∏¢‡∏±‡∏á focus ‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏´‡πâ unfocus
        if (!isKeyboardVisible && _textFieldFocusNode.hasFocus) {
          _textFieldFocusNode.unfocus();
        }
      });
    }

    return Scaffold(
      backgroundColor: Colors.grey[50],
      body: Column(
        children: [
          // Header with smooth animation
          AnimatedBuilder(
            animation: _headerAnimation,
            builder: (context, child) {
              return Transform.translate(
                offset: Offset(0, -100 * (1 - _headerAnimation.value)), // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô/‡∏•‡∏á
                child: Opacity(
                  opacity: _headerAnimation.value, // ‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡∏à‡∏≤‡∏á‡∏´‡∏≤‡∏¢/‡∏õ‡∏£‡∏≤‡∏Å‡∏è
                  child: _headerAnimation.value > 0.1 ? _buildHeader() : const SizedBox(),
                ),
              );
            },
          ),
          // Messages
          Expanded(
            child: _buildMessageList(),
          ),
          // Quick Actions with smooth animation
          AnimatedBuilder(
            animation: _headerAnimation,
            builder: (context, child) {
              return Transform.translate(
                offset: Offset(0, 50 * (1 - _headerAnimation.value)), // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏•‡∏á/‡∏Ç‡∏∂‡πâ‡∏ô
                child: Opacity(
                  opacity: _headerAnimation.value, // ‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡∏à‡∏≤‡∏á‡∏´‡∏≤‡∏¢/‡∏õ‡∏£‡∏≤‡∏Å‡∏è
                  child: _headerAnimation.value > 0.1 ? _buildQuickActions() : const SizedBox(),
                ),
              );
            },
          ),
          // Input Bar
          _buildInputBar(),
          // Safe Area
          SizedBox(height: MediaQuery.of(context).padding.bottom),
        ],
      ),
    );
  }

  Widget _buildHeader() {
    return Container(
      decoration: BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [AppTheme.primaryPurple, AppTheme.primaryPurple.withAlpha(204)],
        ),
      ),
      child: SafeArea(
        bottom: false,
        child: Padding(
          padding: const EdgeInsets.all(16),
          child: Row(
            children: [
              Container(
                width: 40,
                height: 40,
                decoration: BoxDecoration(
                  color: Colors.white.withOpacity(0.2),
                  shape: BoxShape.circle,
                ),
                child: const Icon(
                  Icons.smart_toy,
                  color: Colors.white,
                  size: 24,
                ),
              ),
              const SizedBox(width: 12),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      'AI ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£',
                      style: AppTextStyle.titleMedium(context).copyWith(
                        color: Colors.white,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    Text(
                      '‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ä‡πà‡∏ß‡∏¢‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥',
                      style: AppTextStyle.bodySmall(context).copyWith(
                        color: Colors.white.withOpacity(0.9),
                      ),
                    ),
                  ],
                ),
              ),
              Container(
                padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
                decoration: BoxDecoration(
                  color: Colors.green.withOpacity(0.2),
                  borderRadius: BorderRadius.circular(12),
                  border: Border.all(color: Colors.green.withOpacity(0.3)),
                ),
                child: Row(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    Container(
                      width: 6,
                      height: 6,
                      decoration: const BoxDecoration(
                        color: Colors.green,
                        shape: BoxShape.circle,
                      ),
                    ),
                    const SizedBox(width: 4),
                    Text(
                      '‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå',
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 10,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildMessageList() {
    return ListView.builder(
      controller: _scrollController,
      reverse: true,
      padding: const EdgeInsets.all(16),
      itemCount: _messages.length + (_isTyping ? 1 : 0),
      itemBuilder: (context, index) {
        if (index == 0 && _isTyping) {
          return _buildTypingIndicator();
        }

        final messageIndex = _isTyping ? index - 1 : index;
        final message = _messages[messageIndex];
        return _buildMessageBubble(message);
      },
    );
  }

  Widget _buildMessageBubble(ChatMessage message) {
    return Container(
      margin: const EdgeInsets.only(bottom: 16),
      child: Row(
        mainAxisAlignment: message.isUser ? MainAxisAlignment.end : MainAxisAlignment.start,
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          if (!message.isUser) ...[
            Container(
              width: 32,
              height: 32,
              decoration: BoxDecoration(
                color: AppTheme.primaryPurple.withOpacity(0.1),
                shape: BoxShape.circle,
              ),
              child: Icon(
                Icons.smart_toy,
                color: AppTheme.primaryPurple,
                size: 18,
              ),
            ),
            const SizedBox(width: 8),
          ],
          Flexible(
            child: Container(
              constraints: BoxConstraints(
                maxWidth: MediaQuery.of(context).size.width * 0.75,
              ),
              padding: const EdgeInsets.all(12),
              decoration: BoxDecoration(
                color: message.isUser
                    ? AppTheme.primaryPurple
                    : Colors.white,
                borderRadius: BorderRadius.circular(16).copyWith(
                  bottomLeft: message.isUser
                      ? const Radius.circular(16)
                      : const Radius.circular(4),
                  bottomRight: message.isUser
                      ? const Radius.circular(4)
                      : const Radius.circular(16),
                ),
                boxShadow: [
                  BoxShadow(
                    color: Colors.black.withOpacity(0.05),
                    blurRadius: 8,
                    offset: const Offset(0, 2),
                  ),
                ],
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  if (message.imageUrl != null) ...[
                    ClipRRect(
                      borderRadius: BorderRadius.circular(8),
                      child: Image.network(
                        message.imageUrl!,
                        width: double.infinity,
                        height: 150,
                        fit: BoxFit.cover,
                        errorBuilder: (context, error, stackTrace) {
                          return Container(
                            height: 150,
                            color: Colors.grey[200],
                            child: const Icon(Icons.image_not_supported),
                          );
                        },
                      ),
                    ),
                    if (message.message.isNotEmpty) const SizedBox(height: 8),
                  ],
                  if (message.message.isNotEmpty)
                    Text(
                      message.message,
                      style: AppTextStyle.bodyMedium(context).copyWith(
                        color: message.isUser ? Colors.white : Colors.black87,
                        height: 1.4,
                      ),
                    ),
                ],
              ),
            ),
          ),
          if (message.isUser) ...[
            const SizedBox(width: 8),
            Container(
              width: 32,
              height: 32,
              decoration: BoxDecoration(
                color: AppTheme.primaryPurple.withOpacity(0.1),
                shape: BoxShape.circle,
              ),
              child: Icon(
                Icons.person,
                color: AppTheme.primaryPurple,
                size: 18,
              ),
            ),
          ],
        ],
      ),
    );
  }

  Widget _buildTypingIndicator() {
    return Container(
      margin: const EdgeInsets.only(bottom: 16),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.start,
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Container(
            width: 32,
            height: 32,
            decoration: BoxDecoration(
              color: AppTheme.primaryPurple.withOpacity(0.1),
              shape: BoxShape.circle,
            ),
            child: Icon(
              Icons.smart_toy,
              color: AppTheme.primaryPurple,
              size: 18,
            ),
          ),
          const SizedBox(width: 8),
          Container(
            padding: const EdgeInsets.all(12),
            decoration: BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.circular(16).copyWith(
                bottomLeft: const Radius.circular(4),
              ),
              boxShadow: [
                BoxShadow(
                  color: Colors.black.withOpacity(0.05),
                  blurRadius: 8,
                  offset: const Offset(0, 2),
                ),
              ],
            ),
            child: AnimatedBuilder(
              animation: _typingAnimationController,
              builder: (context, child) {
                return Row(
                  mainAxisSize: MainAxisSize.min,
                  children: List.generate(3, (index) {
                    final delay = index * 0.2;
                    final animationValue = (_typingAnimationController.value - delay).clamp(0.0, 1.0);
                    return Container(
                      margin: EdgeInsets.only(right: index < 2 ? 4 : 0),
                      child: Transform.translate(
                        offset: Offset(0, -8 * (animationValue < 0.5
                            ? 2 * animationValue
                            : 2 * (1 - animationValue))),
                        child: Container(
                          width: 8,
                          height: 8,
                          decoration: BoxDecoration(
                            color: Colors.grey[400],
                            shape: BoxShape.circle,
                          ),
                        ),
                      ),
                    );
                  }),
                );
              },
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildQuickActions() {
    return Container(
      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
      child: SingleChildScrollView(
        scrollDirection: Axis.horizontal,
        child: Row(
          children: [
            _buildQuickActionChip(
              'üì∑ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏π‡∏õ‡∏≠‡∏≤‡∏´‡∏≤‡∏£',
                  () => _handleImageUpload(),
            ),
            const SizedBox(width: 8),
            _buildQuickActionChip(
              'üßÆ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì BMI',
                  () => _handleSendMessage('‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì BMI ‡∏´‡∏ô‡πà‡∏≠‡∏¢'),
            ),
            const SizedBox(width: 8),
            _buildQuickActionChip(
              'üèÉ‚Äç‚ôÇÔ∏è ‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢',
                  () => _handleSendMessage('‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢'),
            ),
            const SizedBox(width: 8),
            _buildQuickActionChip(
              'üçΩÔ∏è ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏°‡∏ô‡∏π',
                  () => _handleSendMessage('‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏´‡∏ô‡πà‡∏≠‡∏¢'),
            ),
            const SizedBox(width: 8),
            _buildQuickActionChip(
              'üíß ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡πâ‡∏≥',
                  () => _handleSendMessage('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡πâ‡∏≥‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô'),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildQuickActionChip(String text, VoidCallback onTap) {
    return GestureDetector(
      onTap: onTap,
      child: Container(
        padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
        decoration: BoxDecoration(
          color: AppTheme.primaryPurple.withOpacity(0.1),
          borderRadius: BorderRadius.circular(20),
          border: Border.all(
            color: AppTheme.primaryPurple.withOpacity(0.2),
          ),
        ),
        child: Text(
          text,
          style: TextStyle(
            color: AppTheme.primaryPurple,
            fontSize: 12,
            fontWeight: FontWeight.w500,
          ),
        ),
      ),
    );
  }

  Widget _buildInputBar() {
    return Container(
      padding: const EdgeInsets.all(12), // ‡∏•‡∏î‡∏à‡∏≤‡∏Å 16 ‡πÄ‡∏õ‡πá‡∏ô 12
      decoration: BoxDecoration(
        color: Colors.white,
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.05),
            blurRadius: 8,
            offset: const Offset(0, -2),
          ),
        ],
      ),
      child: Row(
        children: [
          // Camera Button
          GestureDetector(
            onTap: _handleImageUpload,
            child: Container(
              width: 36, // ‡∏•‡∏î‡∏à‡∏≤‡∏Å 40 ‡πÄ‡∏õ‡πá‡∏ô 36
              height: 36, // ‡∏•‡∏î‡∏à‡∏≤‡∏Å 40 ‡πÄ‡∏õ‡πá‡∏ô 36
              decoration: BoxDecoration(
                color: AppTheme.primaryPurple.withOpacity(0.1),
                shape: BoxShape.circle,
              ),
              child: Icon(
                Icons.camera_alt,
                color: AppTheme.primaryPurple,
                size: 18, // ‡∏•‡∏î‡∏à‡∏≤‡∏Å 20 ‡πÄ‡∏õ‡πá‡∏ô 18
              ),
            ),
          ),
          const SizedBox(width: 10), // ‡∏•‡∏î‡∏à‡∏≤‡∏Å 12 ‡πÄ‡∏õ‡πá‡∏ô 10
          // Text Input
          Expanded(
            child: Container(
              height: 46, // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ñ‡∏á‡∏ó‡∏µ‡πà
              decoration: BoxDecoration(
                color: Colors.grey[100],
                borderRadius: BorderRadius.circular(18), // ‡∏•‡∏î‡∏à‡∏≤‡∏Å 20 ‡πÄ‡∏õ‡πá‡∏ô 18
              ),
              child: TextField(
                controller: _messageController,
                focusNode: _textFieldFocusNode,
                decoration: InputDecoration(
                  hintText: '‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°...',
                  hintStyle: TextStyle(
                    color: Colors.grey[500],
                    fontSize: 14, // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå
                  ),
                  border: InputBorder.none,
                  contentPadding: const EdgeInsets.symmetric(
                    horizontal: 14, // ‡∏•‡∏î‡∏à‡∏≤‡∏Å 16 ‡πÄ‡∏õ‡πá‡∏ô 14
                    vertical: 8, // ‡∏•‡∏î‡∏à‡∏≤‡∏Å 10 ‡πÄ‡∏õ‡πá‡∏ô 8
                  ),
                ),
                maxLines: 1, // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
                style: const TextStyle(fontSize: 14), // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
                textInputAction: TextInputAction.send,
                onSubmitted: _handleSendMessage,
              ),
            ),
          ),
          const SizedBox(width: 10), // ‡∏•‡∏î‡∏à‡∏≤‡∏Å 12 ‡πÄ‡∏õ‡πá‡∏ô 10
          // Send Button
          GestureDetector(
            onTap: () => _handleSendMessage(_messageController.text),
            child: Container(
              width: 36, // ‡∏•‡∏î‡∏à‡∏≤‡∏Å 40 ‡πÄ‡∏õ‡πá‡∏ô 36
              height: 36, // ‡∏•‡∏î‡∏à‡∏≤‡∏Å 40 ‡πÄ‡∏õ‡πá‡∏ô 36
              decoration: BoxDecoration(
                color: AppTheme.primaryPurple,
                shape: BoxShape.circle,
              ),
              child: const Icon(
                Icons.send,
                color: Colors.white,
                size: 18, // ‡∏•‡∏î‡∏à‡∏≤‡∏Å 20 ‡πÄ‡∏õ‡πá‡∏ô 18
              ),
            ),
          ),
        ],
      ),
    );
  }
}
